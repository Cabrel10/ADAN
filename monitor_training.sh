#!/bin/bash

# Script de surveillance de l'entra√Ænement ADAN
# Usage: ./monitor_training.sh [log_file]

LOG_FILE=${1:-"training_final_*.log"}

echo "üìä ADAN - SURVEILLANCE ENTRA√éNEMENT"
echo "‚è∞ $(date)"
echo "üîç Monitoring: $LOG_FILE"
echo ""

# Fonction de surveillance continue
monitor_training() {
    while true; do
        clear
        echo "üìä ADAN Training Monitor - $(date)"
        echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        
        # Status processus
        echo "üîß Status Processus:"
        if pgrep -f "train_rl_agent" > /dev/null; then
            echo "‚úÖ Entra√Ænement ACTIF"
            echo "   PID: $(pgrep -f train_rl_agent)"
            echo "   CPU: $(ps -p $(pgrep -f train_rl_agent) -o %cpu --no-headers)%"
            echo "   RAM: $(ps -p $(pgrep -f train_rl_agent) -o %mem --no-headers)%"
        else
            echo "‚ùå Aucun entra√Ænement d√©tect√©"
        fi
        echo ""
        
        # Espace disque
        echo "üíæ Espace Disque:"
        df -h . | grep -E "(Filesystem|/dev)"
        echo ""
        
        # Derni√®res m√©triques d'entra√Ænement
        echo "üìà Derni√®res M√©triques:"
        if ls $LOG_FILE 1> /dev/null 2>&1; then
            tail -20 $(ls -t $LOG_FILE | head -1) | grep -E "(Episode|Training|timesteps|reward|loss)" | tail -5
        else
            echo "   Aucun log trouv√©"
        fi
        echo ""
        
        # Mod√®les sauvegard√©s
        echo "üíæ Mod√®les R√©cents:"
        if [ -d "models/" ]; then
            ls -lt models/*.zip 2>/dev/null | head -3 | awk '{print "   " $9 " (" $5 " bytes, " $6 " " $7 " " $8 ")"}'
        else
            echo "   Aucun mod√®le trouv√©"
        fi
        echo ""
        
        # TensorBoard logs
        echo "üìä Logs TensorBoard:"
        if [ -d "reports/tensorboard_logs/" ]; then
            LATEST_TB=$(find reports/tensorboard_logs/ -type f -name "events.out.tfevents.*" | head -1)
            if [ -n "$LATEST_TB" ]; then
                echo "   ‚úÖ Logs disponibles - Lancer: tensorboard --logdir reports/tensorboard_logs/"
            else
                echo "   ‚ùå Aucun log TensorBoard"
            fi
        fi
        echo ""
        
        echo "üîÑ Actualisation dans 30s... (Ctrl+C pour arr√™ter)"
        sleep 30
    done
}

# Fonction de surveillance simple
monitor_simple() {
    echo "üìù Surveillance simple des logs..."
    if ls $LOG_FILE 1> /dev/null 2>&1; then
        tail -f $(ls -t $LOG_FILE | head -1) | grep -E "(Episode|Training|timesteps|reward|loss|SUCC√àS|ERROR)"
    else
        echo "‚ùå Aucun fichier log trouv√©: $LOG_FILE"
    fi
}

# Menu principal
echo "Choisissez le mode de surveillance:"
echo "1) Surveillance compl√®te (rafra√Æchissement automatique)"
echo "2) Surveillance simple (suivi des logs)"
echo "3) Status rapide"
read -p "Votre choix [1-3]: " choice

case $choice in
    1)
        monitor_training
        ;;
    2)
        monitor_simple
        ;;
    3)
        echo "üìä Status Rapide:"
        if pgrep -f "train_rl_agent" > /dev/null; then
            echo "‚úÖ Entra√Ænement en cours"
            echo "üìà Derni√®res lignes:"
            tail -5 $(ls -t $LOG_FILE | head -1) 2>/dev/null || echo "Aucun log"
        else
            echo "‚ùå Aucun entra√Ænement"
        fi
        ;;
    *)
        echo "‚ùå Choix invalide"
        exit 1
        ;;
esac